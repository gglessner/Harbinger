# Harbinger Configuration File
# Author: Garland Glessner <gglessner@gmail.com>
# License: GNU GPL

# Email Configuration
email:
  smtp_server: "smtp.gmail.com"
  smtp_port: 587
  use_tls: true
  username: "test@example.com"
  password: "test-password"
  from_address: "test@example.com"
  send_no_hosts_report: false  # Set to true to receive reports even when no new hosts are found

# Logging Configuration
logging:
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR
  file: "harbinger.log"

# Report Configuration
reports:
  save_to_file: true  # Set to true to save reports to timestamped files
  directory: "reports"  # Directory to save report files (will be created if it doesn't exist)

# Standalone Mode Configuration
standalone:
  report_time: "08:00"  # Daily report time (24-hour format)

# Port Monitoring Sections
# Each port_* section defines monitoring for a specific TCP port

# Example 1: Using nmap_scan with flexible arguments
port_ssh:
  port: 22
  label: "SSH"
  email: "security@company.com"
  nmap_scan: "nmap -p {port} --open 10.0.0.0/24"
  post_command: "nmap -sV -p 22 {host}"  # Optional: run command for each detected host

# Example 2: Using custom command (OS agnostic)
port_web:
  port: 80
  label: "HTTP"
  email: "security@company.com"
  command: "nmap -p {port} --open 10.0.0.0/24"
  post_command: "curl -I http://{host}"  # Optional: run command for each detected host

# Example 3: Another nmap scan with different options
port_https:
  port: 443
  label: "HTTPS"
  email: "security@company.com"
  nmap_scan: "nmap -p {port} --open --max-retries 2 10.0.0.0/24"
  # No post_command - will show simple format

# Example 4: Custom script or command
port_rdp:
  port: 3389
  label: "RDP"
  email: "admin@company.com"
  command: "nmap -p {port} --open 10.0.0.0/24"
  post_command: "nmap -sV -p 3389 {host}"  # Optional: run command for each detected host

# Example 5: Custom script (works on both Windows and Linux)
port_custom:
  port: 8080
  label: "Custom Service"
  email: "devops@company.com"
  command: "python custom_scanner.py --subnet 10.0.0.0/24 --port {port}"
